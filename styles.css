/* Flex Sizing Properties

    flex-basis
        Defines the initial size of an element before the additional space is distributed

    flex-grow
        controls the amount of available space an element should take up. Accepts a unitless number value

    flex-shrink
        governs the rate at which elements shrink if they are not small enough to fit in the container
*/

body {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    /* height: 500px; */
    margin: 0 auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: row;
    justify-content: center;
    /* flex-wrap: wrap; */
}

#container div {
    width: 75px;
    height: 75px;
    /* max-width: 300px;  add this to keep the flex-grow from making elements bigger than you want them to go. can also use min-width to keep them from getting too small */
    min-width: 15px;
    flex-basis: 600px; /* width that will be used when the elements are in a row. this is dependant on the MAIN AXIS (i.e. normally width would be the horizontal direction, but if the main axis changes, width won't change with it; flex-basis will*/
}

div:nth-of-type(1) {
    flex-grow: 1; /* grows the element to take up all of the available space. if multiple elements have this, they will share the space. if this was applied to the container instead, all elements would share the available space */
    flex-shrink: 2; /*this element will shrink twice as fast as the other elments. you can add a flex-shrink of 0 to keep it from shrinking at all */
}
div:nth-of-type(5) {
    flex-grow: 2; /* with flex-wrap on, the final div will take up the entire space of the next line (until the next element gets wrapped etc ) */
}

/* the unitless numbers in flex-grow are proportions. flex-grow: 2; would take twice as much space as flex-grow: 1; and so forth */

/* a shorthand property called flex exists. 

one value with a unitless number: flex grow
    flex: 10em;
    flex: 30%; etc

two values: flex-grow | flex-basis
    flex: 1 30px

two values: flex-grow | flex-shrink
    flex: 2 2;

three values: flex-grow | flex-shrink | flex-basis
    flex: 2 2 10%;
*/

main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 300px;
    display: flex;
}

main .sidebar {
    background-color: #6930c3;
    border: 1px solid white;
    flex: 1 2; /* one value = flex-grow - with no flex basis, everything will take up the same size */
}

main .maincontent {
    background-color: #80ffdb;
    flex: 1 1 60%;
}